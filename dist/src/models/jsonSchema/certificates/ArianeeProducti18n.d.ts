/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
/**
 * Arianee Certificate i18n
 */
export declare type $Schema = string;
/**
 * Product Name
 */
export declare type Name = string;
/**
 * Product Sku
 */
export declare type SKU = string;
/**
 * Product GTIN
 */
export declare type GTIN = string;
/**
 * Product Internal Brand ID
 */
export declare type BrandInternalID = string;
export declare type Category = Apparel | Accessory;
/**
 * Apparel
 */
export declare type Apparel = 'apparel';
/**
 * Accessory
 */
export declare type Accessory = 'accessory';
export declare type SubCategory = Shirt | Dress;
/**
 * Shirt
 */
export declare type Shirt = 'shirt';
/**
 * Dress
 */
export declare type Dress = 'dress';
export declare type Intended = WomenS | MenS | AdultGenderNeutral;
/**
 * Women's
 */
export declare type WomenS = 'womens';
/**
 * Men's
 */
export declare type MenS = 'mens';
/**
 * Adult Gender Neutral
 */
export declare type AdultGenderNeutral = 'neutral';
export declare type Type = SerialNumber | CaseNumber | MovementNumber;
/**
 * Serial Number
 */
export declare type SerialNumber = 'serialnumber';
/**
 * Case Number
 */
export declare type CaseNumber = 'casenumber';
/**
 * Movement Number
 */
export declare type MovementNumber = 'movementnumber';
export declare type Value = string;
export declare type SerialNumber1 = {
    type?: Type;
    value?: Value;
    [k: string]: any;
}[];
/**
 * Sub Brand
 */
export declare type SubBrand = string;
/**
 * Product model
 */
export declare type Model = string;
export declare type Language = French | EnglishUS | ChineseTraditional | ChineseSimplified;
/**
 * French
 */
export declare type French = 'fr-FR';
/**
 * English (US)
 */
export declare type EnglishUS = 'en-US';
/**
 * Chinese (traditional)
 */
export declare type ChineseTraditional = 'zh-TW';
/**
 * Chinese (simplified)
 */
export declare type ChineseSimplified = 'zh-CN';
/**
 * Product Description
 */
export declare type Description = string;
export declare type Type1 = Servicing | Recycling | Other;
/**
 * Servicing
 */
export declare type Servicing = 'service';
/**
 * Recycling
 */
export declare type Recycling = 'recycling';
/**
 * other
 */
export declare type Other = 'other';
export declare type Title = string;
export declare type Content = string;
export declare type OrderNumber = number;
export declare type DescriptionMore = {
    type?: Type1;
    title?: Title;
    content?: Content;
    order?: OrderNumber;
    [k: string]: any;
}[];
export declare type Type2 = WebsiteMain | Eshop | Other1 | Transparency;
/**
 * Website (main)
 */
export declare type WebsiteMain = 'website';
/**
 * Eshop
 */
export declare type Eshop = 'eshop';
/**
 * other
 */
/**
 * Transparency
 */
export declare type Transparency = 'transparency';
export declare type Other1 = 'other';
export declare type Title1 = string;
export declare type Url = string;
export declare type OrderNumber1 = number;
export declare type ExternalContents = {
    type?: Type2;
    title?: Title1;
    url?: Url;
    order?: OrderNumber1;
    [k: string]: any;
}[];
export declare type Language1 = French1 | EnglishUS1 | ChineseTraditional1 | ChineseSimplified1;
/**
 * French
 */
export declare type French1 = 'fr-FR';
/**
 * English (US)
 */
export declare type EnglishUS1 = 'en-US';
/**
 * Chinese (traditional)
 */
export declare type ChineseTraditional1 = 'zh-TW';
/**
 * Chinese (simplified)
 */
export declare type ChineseSimplified1 = 'zh-CN';
export declare type Description1 = string;
export declare type Type3 = Servicing1 | Recycling1 | Other2;
/**
 * Servicing
 */
export declare type Servicing1 = 'service';
/**
 * Recycling
 */
export declare type Recycling1 = 'recycling';
/**
 * other
 */
export declare type Other2 = 'other';
export declare type Title2 = string;
export declare type Content1 = string;
export declare type OrderNumber2 = number;
export declare type DescriptionMore1 = {
    type?: Type3;
    title?: Title2;
    content?: Content1;
    order?: OrderNumber2;
    [k: string]: any;
}[];
export declare type Type4 = WebsiteMain1 | Eshop1 | Other3;
/**
 * Website (main)
 */
export declare type WebsiteMain1 = 'website';
/**
 * Eshop
 */
export declare type Eshop1 = 'eshop';
/**
 * other
 */
export declare type Other3 = 'other';
export declare type Title3 = string;
export declare type Url1 = string;
export declare type OrderNumber3 = number;
export declare type ExternalContents1 = {
    type?: Type4;
    title?: Title3;
    url?: Url1;
    order?: OrderNumber3;
    [k: string]: any;
}[];
export declare type OtherLanguagesDescriptionExternalContents = {
    language?: Language1;
    description?: Description1;
    subDescription?: DescriptionMore1;
    externalContents?: ExternalContents1;
    [k: string]: any;
}[];
/**
 * Manufacturers suggested retail price (number)
 */
export declare type MSRP = string;
/**
 * Currency
 */
export declare type Currency = USDollar | Euro | Pound;
/**
 * US Dollar
 */
export declare type USDollar = 'USD';
/**
 * Euro
 */
export declare type Euro = 'EUR';
/**
 * Pound
 */
export declare type Pound = 'GBP';
/**
 * Country of Intended Original Sale (ISO 3166 alpha-3)
 */
export declare type CountryMsrp = string;
export declare type ManufacturersSuggestedRetailPrice = {
    msrp?: MSRP;
    currency?: Currency;
    msrpCountry?: CountryMsrp;
    [k: string]: any;
}[];
export declare type MediaType = PicturePngJpg | YoutubeVideo;
/**
 * Picture (png / jpg)
 */
export declare type PicturePngJpg = 'picture';
/**
 * Youtube video
 */
export declare type YoutubeVideo = 'youtube';
export declare type Type5 = ProductMediaPicture | BrandItemBackgroundPicture3200X1900Ratioed | ItemBackgroundPicture3000X3000Ratioed | CertificateBackgroundPicture1900X3200TBDPreferablyDarkWithLogoOnTop;
/**
 * Product media / picture
 */
export declare type ProductMediaPicture = 'product';
/**
 * Brand Item Background Picture (3200x1900) ratioed
 */
export declare type BrandItemBackgroundPicture3200X1900Ratioed = 'brandItemBackgroundPicture';
/**
 * Item Background Picture (3000x3000) ratioed
 */
export declare type ItemBackgroundPicture3000X3000Ratioed = 'itemBackgroundPicture';
/**
 * Certificate Background Picture (1900x3200 TBD) preferably dark - with logo on top
 */
export declare type CertificateBackgroundPicture1900X3200TBDPreferablyDarkWithLogoOnTop = 'certificateBackgroundPicture';
export declare type URL = string;
export declare type MediaHash = string;
export declare type MediaOrderNumber = number;
/**
 * List of Medias (picture, video, ...)
 */
export declare type Medias = {
    mediaType?: MediaType;
    type?: Type5;
    url?: URL;
    hash?: MediaHash;
    order?: MediaOrderNumber;
    [k: string]: any;
}[];
export declare type Type6 = Color | Material | Printed;
/**
 * Color
 */
export declare type Color = 'color';
/**
 * Material
 */
export declare type Material = 'material';
/**
 * Printed
 */
export declare type Printed = 'printed';
export declare type Value1 = string;
export declare type Attributes = {
    type?: Type6;
    value?: Value1;
    [k: string]: any;
}[];
export declare type Material1 = Cashmere | Cotton | DenimJeans;
/**
 * Cashmere
 */
export declare type Cashmere = 'cashmere';
/**
 * Cotton
 */
export declare type Cotton = 'cotton';
/**
 * Denim - Jeans
 */
export declare type DenimJeans = 'denim-jeans';
export declare type Value2 = string;
/**
 * Pourcentage without % (numeric)
 */
export declare type Pourcentage = string;
export declare type Materials = {
    material?: Material1;
    value?: Value2;
    pourcentage?: Pourcentage;
    [k: string]: any;
}[];
export declare type Type7 = Height | Width | Depth | Size;
/**
 * Height
 */
export declare type Height = 'height';
/**
 * Width
 */
export declare type Width = 'width';
/**
 * Depth
 */
export declare type Depth = 'depth';
/**
 * Size
 */
export declare type Size = 'depth';
export declare type Value3 = string;
export declare type Unit = Inch | Centimer | EU | UK | US;
/**
 * Inch
 */
export declare type Inch = 'in';
/**
 * Centimer
 */
export declare type Centimer = 'cm';
/**
 * EU
 */
export declare type EU = 'eu';
/**
 * UK
 */
export declare type UK = 'uk';
/**
 * US
 */
export declare type US = 'us';
export declare type Sizes = {
    type?: Type7;
    value?: Value3;
    unit?: Unit;
    [k: string]: any;
}[];
/**
 * Country of manufacture in final assembly stage. (ISO 3166 alpha-3)
 */
export declare type CountryManufacturing = string;
/**
 * Facility Identification in Open Apparel Registry (OAR) or GS1 database
 */
export declare type FacilityIdentificationNumber = string;
export declare type Name1 = FairTrade | WWF;
/**
 * Fair Trade
 */
export declare type FairTrade = 'fairtrade';
/**
 * WWF
 */
export declare type WWF = 'wwf';
/**
 * List any certifications that the product has received.
 */
export declare type ProductCertificationsCompliance = {
    name?: Name1;
    [k: string]: any;
}[];
export interface GenericJsonSchema {
    $schema: $Schema;
    [key: string]: any;
}
export interface ArianeeCertificatei18n extends GenericJsonSchema {
    name?: Name;
    sku?: SKU;
    gtin?: GTIN;
    brandInternalId?: BrandInternalID;
    category?: Category;
    subCategory?: SubCategory;
    intended?: Intended;
    serialnumber?: SerialNumber1;
    subBrand?: SubBrand;
    model?: Model;
    language?: Language;
    description?: Description;
    subDescription?: DescriptionMore;
    externalContents?: ExternalContents;
    i18n?: OtherLanguagesDescriptionExternalContents;
    msrp?: ManufacturersSuggestedRetailPrice;
    medias?: Medias;
    attributes?: Attributes;
    materials?: Materials;
    size?: Sizes;
    manufacturingCountry?: CountryManufacturing;
    facilityId?: FacilityIdentificationNumber;
    productCertification?: ProductCertificationsCompliance;
    [k: string]: any;
}
export interface ArianeeCertificatei18nV3 extends ArianeeCertificatei18n {
    parentCertificates: Array<{
        type: string;
        order: number;
        arianeeLink: string;
    }>;
}
